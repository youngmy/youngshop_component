plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}
def cfg = rootProject.ext
android {
    compileSdk cfg.android.compileSdk

    defaultConfig {
        applicationId cfg.applicationId.app
        minSdk cfg.android.minSdk
        targetSdk cfg.android.targetSdk
        versionCode cfg.android.versionCode
        versionName cfg.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [AROUTER_MODULE_NAME: project.getName()]
//                includeCompileClasspath = true
//            }
//        }


    }

    kapt {
        arguments {
            arg("AROUTER_MODULE_NAME", project.getName())
        }
        generateStubs = true
    }

    signingConfigs {
        release {

            storeFile file('app.jks')//新签名
            storePassword "123456"//证书密码
            keyAlias 'ruimeng'//证书别名
            keyPassword "123456"//别名密码


        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
//            minifyEnabled false
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        pickFirst 'META-INF/*'
    }

    buildFeatures.dataBinding = true
}

dependencies {

    implementation project(':libBase')
    if (!cfg.isDebug){
        implementation project(':login')
        implementation project(':main')
        implementation project(':home')
        implementation project(':shop')
        implementation project(':gift')
        implementation project(':mine')
        implementation project(':demo')
    }

    kapt cfg.libARouterCompiler
    implementation 'androidx.core:core-splashscreen:1.0.0-alpha01'

    implementation("androidx.room:room-runtime:2.5.0")

    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:2.5.0")

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}